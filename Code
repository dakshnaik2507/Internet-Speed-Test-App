import tkinter as tk
from tkinter import messagebox
import speedtest
from datetime import datetime
import os
import subprocess
import platform

# ---------- File Setup ----------
folder_name = "SpeedLogs"
file_name = "speed_results.txt"
base_path = os.path.dirname(os.path.abspath(__file__))
folder_path = os.path.join(base_path, folder_name)
file_path = os.path.join(folder_path, file_name)

# Create subfolder if it doesn't exist
os.makedirs(folder_path, exist_ok=True)

# ---------- Save Result to TXT ----------
def save_to_txt(download, upload, ping):
    with open(file_path, "a") as f:
        now = datetime.now()
        f.write(f"Date: {now.strftime('%Y-%m-%d')} | Time: {now.strftime('%H:%M:%S')} | "
                f"Download: {download:.2f} Mbps | Upload: {upload:.2f} Mbps | Ping: {ping:.2f} ms\n")

# ---------- Open TXT File in File Manager ----------
def open_file():
    try:
        if platform.system() == "Windows":
            os.startfile(file_path)
        elif platform.system() == "Darwin":  # macOS
            subprocess.call(["open", file_path])
        else:  # Linux
            subprocess.call(["xdg-open", file_path])
    except Exception as e:
        messagebox.showerror("Error", f"Could not open file:\n{e}")

# ---------- Run Speed Test ----------
def run_speed_test():
    try:
        label_status.config(text="Testing... Please wait ‚è≥")
        root.update()
        st = speedtest.Speedtest()
        st.get_best_server()

        download_speed = st.download() / 1_000_000
        upload_speed = st.upload() / 1_000_000
        ping_result = st.results.ping

        label_download.config(text=f"Download Speed: {download_speed:.2f} Mbps")
        label_upload.config(text=f"Upload Speed: {upload_speed:.2f} Mbps")
        label_ping.config(text=f"Ping: {ping_result:.2f} ms")
        label_status.config(text="Test Completed ‚úÖ")

        save_to_txt(download_speed, upload_speed, ping_result)

    except Exception as e:
        messagebox.showerror("Error", f"Failed to test speed:\n{e}")
        label_status.config(text="Test Failed ‚ùå")

# ---------- GUI Setup ----------
root = tk.Tk()
root.title("Internet Speed Test Tool")
root.geometry("420x320")
root.resizable(False, False)
root.config(bg="#1f1f1f")

title = tk.Label(root, text="üì∂ Internet Speed Test", font=("Arial", 16, "bold"), fg="#ffffff", bg="#1f1f1f")
title.pack(pady=10)

btn_test = tk.Button(root, text="Start Test", font=("Arial", 14), command=run_speed_test,
                     bg="#00adb5", fg="white", padx=10, pady=5)
btn_test.pack(pady=10)

btn_open = tk.Button(root, text="üìÇ Open Result File", font=("Arial", 12), command=open_file,
                     bg="#393e46", fg="white", padx=8, pady=4)
btn_open.pack(pady=5)

label_status = tk.Label(root, text="", font=("Arial", 12), fg="#00ff00", bg="#1f1f1f")
label_status.pack()

label_download = tk.Label(root, text="Download Speed: ", font=("Arial", 12), fg="#ffffff", bg="#1f1f1f")
label_download.pack(pady=5)

label_upload = tk.Label(root, text="Upload Speed: ", font=("Arial", 12), fg="#ffffff", bg="#1f1f1f")
label_upload.pack(pady=5)

label_ping = tk.Label(root, text="Ping: ", font=("Arial", 12), fg="#ffffff", bg="#1f1f1f")
label_ping.pack(pady=5)

root.mainloop()
